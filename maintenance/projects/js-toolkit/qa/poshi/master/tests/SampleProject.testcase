@component-name = "portal-collaboration"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Frontend Infrastructure";
	var pageName = "Samples Page";

	setUp {
		Portal.TestCase.setUpPortalInstance();

		Portal.User.firstLoginPG();
	}

    @priority = "5"
	test AddSamplePortlet {
		Portal.Navigator.gotoPage(pageName = "Welcome");

		Portal.Portlet.addPG(portletName = "angular-portlet-l10n-cfg-sample");

        Portal.Portlet.viewTitle(portletName = "angular-portlet-l10n-cfg-sample");

		Portal.Portlet.viewBody(
			portletBody = "angular-portlet-l10n-cfg-sample",
			portletName = "angular-portlet-l10n-cfg-sample"
		);

		Portal.Navigator.gotoPage(pageName = "Welcome");

        Portal.Portlet.addPG(portletName = "angular-portlet-l10n-cfg-nosample");

        Portal.Portlet.viewTitle(portletName = "angular-portlet-l10n-cfg-nosample");

        Portal.Portlet.viewBody(
			portletBody = "",
			portletName = "angular-portlet-l10n-cfg-sample"
		);
	}

    @priority = "5"
	test AddAllSamplePortlets {
        var fileContent = FileUtil.read("poshi/dependencies/sample_list.txt");

		for (var sampleProjectName : list "${fileContent}") {
			echo("${sampleProjectName}");

			Portal.Navigator.gotoPage(pageName = "Welcome");

			Portal.Portlet.addPG(portletName = "${sampleProjectName}");

			Portal.Portlet.viewTitle(portletName = "${sampleProjectName}");

			if (contains("${sampleProjectName}", "nosample")) {
				var key_portletName = "${sampleProjectName}";

				Portal.AssertTextNotEquals.assertNotPartialText(
					locator1 = "Portlet#BODY",
					value1 = "${sampleProjectName}"
				);
			}
			else {
				Portal.Portlet.viewBody(
					portletBody = "${sampleProjectName}",
					portletName = "${sampleProjectName}"
				);
			}

			Portal.Portlet.deletePG(portletName = "${sampleProjectName}");
        }
	}
}